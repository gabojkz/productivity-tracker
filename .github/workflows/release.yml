name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            platform: darwin-x86_64
            artifact: productivity-tracker.app.tar.gz
          - os: ubuntu-latest
            platform: linux-x86_64
            artifact: productivity-tracker.AppImage
          - os: windows-latest
            platform: windows-x86_64
            artifact: productivity-tracker.msi

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        run: npm ci

      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      - name: Build application
        run: npm run tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: src-tauri/target/release/

  create-release:
    needs: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*.dmg
            artifacts/*.AppImage
            artifacts/*.msi
            artifacts/*.exe
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs: create-release
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Notify success
        run: |
          echo "ðŸŽ‰ Release ${{ github.ref_name }} created successfully!"
          echo "ðŸ“± Users can now update their apps automatically!" 